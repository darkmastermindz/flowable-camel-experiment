spring.profiles.active=local_demo
server.port=9000

spring.main.allow-circular-references=true

# Spring Actuator Routing Configs
# Maximum time that a response can be cached.
management.endpoint.flowable.cache.time-to-live=0ms
# Whether to enable the flowable endpoint.
management.endpoint.flowable.enabled=true
# Expose all actuator routes, optionals: flowable,camel-routes,hawtio,jolokia
management.endpoints.web.exposure.include=info,health,flowable,camel-routes,hawtio,jolokia

management.info.camel.enabled=true
management.info.camel.verbose=true

management.endpoint.camelroutes.enabled=true
management.endpoint.camelroutes.read-only=true

spring.jmx.enabled=true

security.enable-csrf=false 

# hawtio: https://github.com/hawtio/hawtio/tree/main/examples/springboot
# examples: https://github.com/jinternals/camel/tree/master
endpoints.jolokia.sensitive       = false
endpoints.hawtio.sensitive        = false

logging.level.io.hawt             = INFO
logging.level.org.springframework = WARN
logging.level.io.undertow         = WARN


hawtio.authenticationEnabled = false
#hawtio.offline = true
# replaces /actuator with /
#management.endpoints.web.base-path=/

# replaces /actuator/hawtio/console with /hawtio/console
#management.endpoints.web.path-mapping.hawtio=hawtio/console


# Logging
logging.level.root=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.security=DEBUG

# Spring JPA
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:~/serendipity-db/db;AUTO_SERVER=TRUE;AUTO_SERVER_PORT=9091;DB_CLOSE_DELAY=-1
spring.datasource.username=admin
spring.datasource.password=secret
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# By default, when not using an in-memory database, the tables won?t be created automatically. Create a file application.properties on the classpath and add following property
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=none

# H2 Console
spring.h2.console.enabled=false
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false




# Default Admin Accounts
#flowable.idm.app.admin.user-id=flowable
#flowable.idm.app.admin.password=secret
#flowable.idm.app.admin.first-name=
#flowable.idm.app.admin.last-name=Administrator
#flowable.idm.app.admin.email=admin@hanselwei.dev
#
#flowable.common.app.idm-admin.user=flowable
#flowable.common.app.idm-admin.password=secret
#
#flowable.modeler.app.deployment-api-url=http://localhost:9999/flowable-task/app-api

# LDAP
#flowable.idm.ldap.enabled=true
#flowable.idm.ldap.server=ldap://localhost
#flowable.idm.ldap.port=10389
#flowable.idm.ldap.user=cn=admin,dc=flowable,dc=org
#flowable.idm.ldap.password=secret
#flowable.idm.ldap.base-dn=dc=flowable,dc=org
#flowable.idm.ldap.user-base-dn=ou=users,dc=flowable,dc=org
#flowable.idm.ldap.group-base-dn=ou=groups,dc=flowable,dc=org
#flowable.idm.ldap.query.user-by-id=(&(objectClass=inetOrgPerson)(uid={0}))
#flowable.idm.ldap.query.user-by-full-name-like=(&(objectClass=inetOrgPerson)(|({0}=*{1}*)({2}=*{3}*)))
#flowable.idm.ldap.query.all-users=(objectClass=inetOrgPerson)
#flowable.idm.ldap.query.groups-for-user=(&(objectClass=groupOfUniqueNames)(uniqueMember={0}))
#flowable.idm.ldap.query.all-groups=(objectClass=groupOfUniqueNames)
#flowable.idm.ldap.query.group-by-id=(&(objectClass=groupOfUniqueNames)(uniqueId={0}))
#flowable.idm.ldap.attribute.user-id=uid
#flowable.idm.ldap.attribute.first-name=cn
#flowable.idm.ldap.attribute.last-name=sn
#flowable.idm.ldap.attribute.email=mail
#flowable.idm.ldap.attribute.group-id=cn
#flowable.idm.ldap.attribute.group-name=cn
#flowable.idm.ldap.cache.group-size=10000
#flowable.idm.ldap.cache.group-expiration=180000

# Flowable REST
# Whether to enable CORS requests at all. If false, the other properties have no effect
#flowable.rest.app.cors.enabled=true
# Whether to include credentials in a CORS request
#flowable.rest.app.cors.allow-credentials=true
# Comma-separated URLs to accept CORS requests from
#flowable.rest.app.cors.allowed-origins=*
# Comma-separated HTTP headers to allow in a CORS request
#flowable.rest.app.cors.allowed-headers=*
# Comma-separated HTTP verbs to allow in a CORS request
#flowable.rest.app.cors.allowed-methods=DELETE,GET,PATCH,POST,PUT
# Comma-separated list of headers to expose in CORS response
#flowable.rest.app.cors.exposed-headers=*